 /*
        Used sliding Window trick, start is the left window and j is the right window, which makes this algorithm linear time complexity
    */
    
    public List<Integer> findSubstring(String s, String[] words) {
        List<Integer> res = new ArrayList<Integer>();
        HashMap<String, Integer> map = new HashMap<String, Integer>();
        if(s==null || s.length() == 0 || words == null || words.length == 0 ) return res;
        //build map, get frequency of each word
        for(String word: words){
            if(map.containsKey(word)){
                map.put(word, map.get(word)+1);
            }else{
                map.put(word, 1);
            }
        }
        int len = words[0].length();
        int n = s.length();
        for(int i = 0; i < len; i++){
            int start = i;
            int count = 0;
            HashMap<String, Integer> curMap = new HashMap<String, Integer>();

            for(int j = i; j <= n-len; j = j+len){
                String sub = s.substring(j, j+len);
                if(map.containsKey(sub)){
                    if(curMap.containsKey(sub)){
                        curMap.put(sub, curMap.get(sub)+1);
                    }else{
                        curMap.put(sub, 1);
                    }
                    count++;
                    while(curMap.get(sub) > map.get(sub)){
                        String left = s.substring(start, start+len);
                        curMap.put(left, curMap.get(left)-1);
                        count--;
                        start = start+len;
                    }
                    if(count == words.length){
                        res.add(start); 
                        String left = s.substring(start, start+len);
                        curMap.put(left, curMap.get(left)-1);
                        count--;
                        start = start + len;
                     }
                }else{
                   curMap.clear();
                   start = j+len;
                   count = 0;
                }
            }
             
        }
        return res;
    }

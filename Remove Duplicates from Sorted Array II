

Easy Remove Duplicates from Sorted Array II
29%
Accepted

Follow up for "Remove Duplicates":
What if duplicates are allowed at most twice?

For example,
Given sorted array A = [1,1,1,2,2,3],

Your function should return length = 5, and A is now [1,1,2,2,3].


public class Solution {
    /**
     * @param A: a array of integers
     * @return : return an integer
     */
    public int removeDuplicates(int[] nums) {
        // write your code here
        if(nums == null || nums.length == 0) return 0;
        int index = 0;
        int j = 0;
        for(int i = 0; i < nums.length;){
            int now = nums[i];
            for(j = i; j < nums.length; j++){
                if(nums[j] != now) break;
                if(j - i < 2){
                    nums[index++] = now;
                }
            }
            i = j;
            
        }
        return index;
    }
    
   
    
    //current.next可以指向null，但是不能让一个变量直接等于Null 这样会造成nullpointerexception!
//这个借鉴了code ganker, 判断left.next是否等于right非常巧妙


public ListNode deleteDuplicates(ListNode head) {
        if(head == null) return head;
        ListNode dummy = new ListNode(0);
        ListNode left = dummy;
        left.next = head;
        ListNode right = head;
        while(right != null){
            while(right.next != null && right.next.val == right.val){
                right = right.next;
            }
            if(left.next == right){
                left = left.next;
            }else{
                left.next = right.next;
            }
            right = right.next;
        }
        return dummy.next;
    }
}

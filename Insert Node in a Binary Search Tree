
Easy Insert Node in a Binary Search Tree
41%
Accepted

Given a binary search tree and a new tree node, insert the node into the tree. You should keep the tree still be a valid binary search tree.
Have you met this question in a real interview?
Example

Given binary search tree as follow, after Insert node 6, the tree should be:

  2             2
 / \           / \
1   4   -->   1   4
   /             / \ 
  3             3   6

Challenge

Can you do it without recursion?


/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root: The root of the binary search tree.
     * @param node: insert this node into the binary search tree
     * @return: The root of the new binary search tree.
     */
    public TreeNode insertNode(TreeNode root, TreeNode node) {
        // write your code here
        if(root == null) return node;
        TreeNode cur = root;
        TreeNode parent = null;
        while(cur != null){
            parent = cur;
            if(node.val > cur.val){
                cur = cur.right;
            }else{
                cur = cur.left;
            }
        }
        if(node.val > parent.val){
            parent.right = node;
        }else{
            parent.left = node;
        }
        return root;
    }
}

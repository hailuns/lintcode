

Hard Median of two Sorted Arrays
20%
Accepted

There are two sorted arrays A and B of size m and n respectively. Find the median of the two sorted arrays.

class Solution {
    /**
     * @param A: An integer array.
     * @param B: An integer array.
     * @return: a double whose format is *.5 or *.0
     */
    public double findMedianSortedArrays(int[] A, int[] B) {
        // write your code here
        int len = A.length + B.length;
        if(len%2 == 0){
            return (findKthElement(A, 0, B, 0, len/2) + findKthElement(A, 0, B, 0, len/2+1))/2.0;
        }else{
            return findKthElement(A, 0 , B, 0, len/2 + 1);
        }
    }
    
    private int findKthElement(int[] A, int start_A, int[] B, int start_B, int k){
        if(start_A >= A.length) return B[start_B + k -1];
        if(start_B >= B.length) return A[start_A + k -1];
        if(k == 1){
            return Math.min(A[start_A], B[start_B]);
        }
        int A_key = start_A + k/2 - 1 < A.length ? A[start_A + k/2 - 1]: Integer.MAX_VALUE;
        int B_key = start_B + k/2 - 1 < B.length ? B[start_B + k/2 - 1] : Integer.MAX_VALUE;
        if(A_key < B_key){
            return findKthElement(A, start_A+k/2, B, start_B, k-k/2);
        }else{
            return findKthElement(A, start_A, B, start_B+k/2, k-k/2);
        }
    }
}


Medium Search in Rotated Sorted Array II
40%
Accepted

Follow up for "Search in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?

Write a function to determine if a given target is in the array.


public class Solution {
    /** 
     * param A : an integer ratated sorted array and duplicates are allowed
     * param target :  an integer to be search
     * return : a boolean 
     */
    public boolean search(int[] A, int target) {
        // write your code here
        int start = 0;
        int end = A.length - 1;
        if(A == null || A.length == 0) return false;
        while(start + 1 < end){
            int mid = start + (end-start)/2;
            if(A[mid] == target) {
                return true;
            }
            if(A[mid] > A[start]){
                if(A[mid] > target && A[start] <= target){
                    end = mid;
                }else{
                    start = mid;
                }
            }else if(A[mid] < A[start]){
                if(A[mid] < target && A[end] >= target){
                    start = mid;
                }else{
                    end  = mid;
                }
            }else{
                start++;
            }
            
        }
        if(A[start] == target || A[end] == target) return true;
        return false;
    }
}

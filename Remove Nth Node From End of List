/**
 * Definition for ListNode.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int val) {
 *         this.val = val;
 *         this.next = null;
 *     }
 * }
 */ 
public class Solution {
    /**
     * @param head: The first node of linked list.
     * @param n: An integer.
     * @return: The head of linked list.
     */
    ListNode removeNthFromEnd(ListNode head, int n) {
        // write your code here
        if(head == null || n < 0) return null;
        ListNode slow = head;
        ListNode fast = head;
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        while(n != 0 && fast != null){
            fast = fast.next;
            n--;
        }
        if(n == 0 && fast == null){
            dummy.next = head.next;
            return dummy.next;
        } 
        while(fast.next != null){
            slow = slow.next;
            fast = fast.next;
        }
        if(fast.next == null){
            slow.next = slow.next.next;
        }
        return dummy.next;
    }
}

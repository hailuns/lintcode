public class Solution {
    /**
     * @param S, T: Two string.
     * @return: Count the number of distinct subsequences
     */
    public int numDistinct(String S, String T) {
        // write your code here
        if (S == null || T == null) {
            return 0;
        }
        int len1 = S.length();
        int len2 = T.length();
        int[][] numDistSub = new int[len1+1][len2+1];
        for(int i = 0; i < len1; i++){
            numDistSub[i][0] = 1; 
        }
        
        for(int i = 1; i <= len1; i++){
            for(int j = 1; j <=len2; j++){
                if(S.charAt(i-1) == T.charAt(j-1)){
                     numDistSub[i][j] = numDistSub[i-1][j] + numDistSub[i-1][j-1];
                }else{
                    numDistSub[i][j] = numDistSub[i-1][j];
                }
            }
        }
        return numDistSub[len1][len2];
    }
}
